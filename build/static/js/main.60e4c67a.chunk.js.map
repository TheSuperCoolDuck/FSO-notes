{"version":3,"sources":["services/notes.js","components/Note.js","App.js","index.js"],"names":["baseUrl","request","axios","get","nonExisting","id","content","date","important","then","response","data","concat","newObject","post","put","Note","note","toggleImportance","label","className","onClick","Notification","message","Footer","style","color","fontStyle","fontSize","App","useState","notes","setNotes","newNote","setNewNote","showAll","setShowAll","errorMessage","setErrorMessage","useEffect","noteService","initialNotes","notesToShow","filter","map","find","n","changeNote","returnedNote","catch","error","setTimeout","toggleImportanceOf","onSubmit","event","preventDefault","noteObject","length","Date","toISOString","Math","random","value","onChange","console","log","target","type","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.60e4c67a.chunk.js","sourcesContent":["import axios from 'axios'\r\nconst baseUrl = '/api/notes'\r\n\r\nconst getAll = ()=>{\r\n    const request = axios.get(baseUrl)\r\n\r\n    const nonExisting={\r\n        id:1000,\r\n        content:'This note is not saved to server',\r\n        date: '2019-05-30T17:30:31:098Z',\r\n        important:true,\r\n    }\r\n\r\n    return request.then(response => response.data.concat(nonExisting))\r\n}\r\n\r\nconst create = newObject=>{\r\n    const request = axios.post(baseUrl,newObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst update=(id,newObject)=>{\r\n    const request = axios.put(`${baseUrl}/${id}`,newObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nexport default{getAll, create, update}","import React from 'react'\r\n\r\nconst Note = ({note,toggleImportance})=>{\r\n  const label = note.important\r\n    ? 'make not important': 'make important'\r\n\r\n  return(\r\n    <li className='note'>\r\n      {note.content}\r\n      <button onClick={toggleImportance}>{label}</button>\r\n    </li>\r\n  )\r\n}\r\n\r\n  export default Note","import React, {useState,useEffect} from 'react'\nimport noteService from './services/notes'\nimport Note from './components/Note'\n\nconst Notification =({message})=>{\n  if(message  == null){\n    return null\n  }\n\n  return(\n    <div className=\"error\">\n      {message}\n    </div>\n  )\n}\n\nconst Footer=()=>{\n\n  const footerStyle={\n    color:'green',\n    fontStyle:'italic',\n    fontSize: 16\n  }\n\n  return(\n    <div style={footerStyle}>\n      <br/>\n      <em>Note app, Department of Computer Science, University of Helsinki 2021</em>\n    </div>\n  )\n}\n\nconst App = () => {\n  const [notes, setNotes] = useState([])\n  const [newNote, setNewNote] = useState('')\n  const [showAll, setShowAll] = useState(true)\n  const [errorMessage, setErrorMessage] = useState(null)\n\n  useEffect(() => {\n    noteService\n      .getAll()\n      .then(initialNotes => {\n        setNotes(initialNotes)\n      })\n  }, [])\n\n  const toggleImportanceOf=(id)=>{\n    const note = notes.find(n=>n.id===id)\n    const changeNote={...note,important:!note.important}\n\n    noteService\n      .update(id,changeNote)\n      .then(returnedNote=>{\n      setNotes(notes.map(note=>note.id!==id?note:returnedNote))\n      })\n      .catch(error=>{\n        setErrorMessage(\n          `Note '${note.content}' was already removed from server`\n        )\n        setTimeout(()=>{\n          setErrorMessage(null)\n        }, 5000)\n        setNotes(notes.filter(n=>n.id!==id))\n      })\n  }\n\n  const addNote = (event) =>{\n    event.preventDefault()\n    const noteObject={\n      id: notes.length+1,\n      content: newNote,\n      date: new Date().toISOString(),\n      important:Math.random()<0.5\n    }\n\n    noteService\n      .create(noteObject)\n      .then(returnedNote=>{\n        setNotes(notes.concat(returnedNote))\n        setNewNote('')\n      })\n  }\n\n  const handleNoteChange=(event)=>{\n    console.log(event.target.value)\n    setNewNote(event.target.value)\n  }\n\n  const notesToShow = showAll\n    ? notes\n    : notes.filter(note=>note.important)\n\n  return(\n    <div>\n      <h1>Notes</h1>\n      <Notification message={errorMessage}/>\n      <div>\n        <button onClick={()=>setShowAll(!showAll)}>\n          show {showAll ? 'important':'all'}\n        </button>\n      </div>\n      <ul>\n        {notesToShow.map(note=> \n          <Note \n            key={note.id} \n            note={note}\n            toggleImportance={()=>toggleImportanceOf(note.id)}/>\n        )}\n      </ul>\n      <form onSubmit={addNote}>\n        <input \n          value={newNote}\n          onChange={handleNoteChange}/>\n        <button type='submit'>save</button>\n      </form>\n      <Footer/>\n    </div>\n  )\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css'\n\nReactDOM.render(\n  <App/>,\n  document.getElementById('root')\n)"],"sourceRoot":""}